version: '3.8'

services:
  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: judge-ca-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@db:5432/judgedb
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-in-production}
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - NEXT_PUBLIC_WEBSOCKET_URL=http://localhost:3001
    depends_on:
      - db
      - redis
    networks:
      - judge-network
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: judge-ca-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=judgedb
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - judge-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: judge-ca-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - judge-network
    restart: unless-stopped

  # WebSocket Server
  websocket:
    build:
      context: .
      dockerfile: Dockerfile.websocket
    container_name: judge-ca-websocket
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@db:5432/judgedb
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-in-production}
    depends_on:
      - db
      - redis
    networks:
      - judge-network
    restart: unless-stopped

  # Nginx Reverse Proxy (optional for production)
  nginx:
    image: nginx:alpine
    container_name: judge-ca-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
      - websocket
    networks:
      - judge-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  judge-network:
    driver: bridge